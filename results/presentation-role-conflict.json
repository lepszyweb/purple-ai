{
  "button_role_type_i": "Problem we fragmencie kodu polega na tym, że przycisk ma rolę \"presentation\", co oznacza, że nie powinien mieć żadnego znaczenia semantycznego ani interaktywności. Ma jednak typ \"button\" i może również zawierać globalne atrybuty ARIA lub `tabindex`, co jest sprzeczne z rolą \"presentation\".\n\nPoprawna wersja fragmentu kodu powinna usunąć rolę \"presentation\" i pozwolić przyciskowi na domyślne znaczenie semantyczne:\n\n```html\n<button type=\"button\"><i></i></button>\n```\n\nJeśli intencją było posiadanie elementu prezentacyjnego bez interaktywności, należy użyć innego elementu, takiego jak `div` lub `span`, i usunąć wszelkie globalne atrybuty ARIA lub tabindex:\n\n```html\n<span role=\"presentation\"><i></i></span>\n```",
  "img_alt_role_src_style_tabindex": "Problem w tym fragmencie kodu polega na tym, że element `img` ma rolę prezentacyjną (pusty atrybut `alt`), ale ma również globalne atrybuty ARIA (`role=\"button\"`) i `tabindex=\"0\"`.\n\nAby naprawić problem z dostępnością, możesz utworzyć oddzielny element przycisku do obsługi interakcji i zawinąć w nim element `img`. Oto poprawiona wersja fragmentu kodu:\n\n```html\n<button style=\"background: none; border: none; padding: 0; cursor: pointer;\" tabindex=\"0\">\n  <img alt=\"\" src=\"...\" style=\"margin-left: -12px; margin-top: -41px; width: 25px; height: 41px; transform: translate3d(538px, 200px, 0px); z-index: 200;\">\n</button>\n```\n\nW tej poprawionej wersji, element `img` jest czysto prezentacyjny, a interakcja jest obsługiwana przez element `button`. Poprawia to dostępność i zapewnia, że element działa zgodnie z oczekiwaniami dla użytkowników klawiatury i czytników ekranu."
}






