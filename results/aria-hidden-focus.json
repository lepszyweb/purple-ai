{
  "div_aria-hidden_style": "Problem w tym fragmencie kodu polega na tym, że atrybut `aria-hidden` jest ustawiony na "true" w elemencie, który zawiera elementy fokusowalne lub sam jest fokusowalny. Może to powodować dezorientację użytkowników czytników ekranu, ponieważ elementy fokusowalne wewnątrz ukrytej zawartości będą nadal dostępne i ogłaszane, mimo że nie są widoczne na ekranie.\n\nAby rozwiązać ten problem, należy usunąć elementy fokusowalne z ukrytej treści lub uczynić je niefokusowalnymi poprzez dodanie `tabindex=\"-1\"` do każdego elementu fokusowalnego. Alternatywnie, można usunąć atrybut `aria-hidden`, jeśli zawartość powinna być dostępna.\n\nOto poprawiona wersja fragmentu kodu::\n\n```html\n<div aria-hidden=\"true\" style=\"width: 394px;\">\n  <!-- Zawartość bez możliwości fokusowania znajduje się tutaj -->\n  <button tabindex=\"-1\">Przykładowy przycisk</button>\n  <a href=\"#\" tabindex=\"-1\">Przykładowy link</a>\n</div>\n```\n\nW tej poprawionej wersji dodano `tabindex=\"-1\"` do elementów fokusowalnych (przycisk i link) wewnątrz ukrytej treści, czyniąc je niefokusowalnymi.",
  "li_aria-controls_aria-hidden_aria-selected_role_button_role_tabindex_type": "Problem we fragmencie kodu polega na tym, że element z `aria-hidden=\"true\"` zawiera fokusowalny element (przycisk). Oznacza to, że czytniki ekranu pominą zawartość, ale użytkownicy klawiatury nadal mogą się na niej skupić, powodując zamieszanie.\n\nOto poprawiona wersja fragmentu kodu:\n\n```\n<li aria-controls=\"navigation00\" role=\"presentation\">\n  <button role=\"button\" type=\"button\"></button>\n</li>\n```\n\nW tej poprawionej wersji zostały usunięte atrybuty `aria-hidden=\"true\"` i `aria-selected=\"true\"`  z elementu `li`, ponieważ nie są one potrzebne w tym kontekście. Przycisk pozostaje fokusowalny, a użytkownicy czytników ekranu będą teraz mogli również uzyskać do niego dostęp.",
  "li_aria-hidden_style_a_href_img_alt_src": "Problem w podanym fragmencie kodu polega na tym, że element `li` ma atrybut `aria-hidden=\"true\"`, co oznacza, że powinien być ukryty przed czytnikami ekranu, ale zawiera fokusowalny element (element `a`). Może to powodować dezorientację użytkowników czytników ekranu. Aby rozwiązać ten problem, można dodać `tabindex=\"-1\"` do elementu `a`, aby nie był on fokusowalny.\n\nOto poprawiony fragment kodu:\n\n```\n<li aria-hidden=\"true\" style=\"height: 162.424px;\">\n  <a href=\"...\" tabindex=\"-1\">\n    <img alt=\"icon\" src=\"...\">\n  </a>\n</li>\n```",
  "div_aria-hidden": "Problem w podanym fragmencie kodu polega na tym, że atrybut `aria-hidden=\"true\"` jest stosowany do elementu, który jest fokusowalny lub zawiera elementy fokusowalne. Może to prowadzić do dezorientacji użytkowników czytników ekranu, ponieważ elementy fokusowalne będą nadal dostępne za pomocą nawigacji klawiaturowej, ale nie zostaną ogłoszone przez czytnik ekranu.\n\nAby rozwiązać ten problem, musimy upewnić się, że elementy fokusowalne wewnątrz kontenera `aria-hidden=\"true\"` nie są fokusowalne. Można to osiągnąć dodając atrybut `tabindex=\"-1\"` do elementów fokusowalnych.\n\nOto poprawiona wersja fragmentu kodu:\n\n```html\n<div aria-hidden=\"true\">\n  <!-- Dodaj tabindex=\"-1\" do elementów fokusowalnych wewnątrz kontenera aria-hidden -->\n  <button tabindex=\"-1\">Przykładowy przycisk</button>\n  <a href=\"#\" tabindex=\"-1\">Przykładowy link</a>\n</div>\n```\n\nW tej poprawionej wersji, elementy fokusowalne (przycisk i link) wewnątrz kontenera `aria-hidden=\"true\"` mają dodany atrybut `tabindex=\"-1\"`, co czyni je niefokusowalnymi i uniemożliwia dotarcie do nich za pomocą nawigacji klawiaturowej.",
  "li_aria-hidden": "Problem polega na tym, że atrybut `aria-hidden` jest stosowany do elementu, który jest fokusowalny lub zawiera elementy fokusowalne. Może to powodować zamieszanie dla użytkowników czytników ekranu, ponieważ mogą oni nie być w stanie uzyskać dostępu do treści w elemencie.\n\nAby rozwiązać ten problem, należy albo usunąć atrybut `aria-hidden`, jeśli zawartość powinna być dostępna, albo sprawić, by elementy fokusowalne w elemencie `aria-hidden` nie były fokusowalne poprzez dodanie do nich `tabindex=\"-1\"`.\n\nOto poprawiona wersja fragmentu kodu:\n\nJeśli zawartość powinna być dostępna:\n```\n<li> <!-- usuń atrybut aria-hidden -->\n  <!-- elementy otrzymujące fokus -->\n</li>\n```\n\nJeśli zawartość nie powinna być dostępna:\n```\n<li aria-hidden=\"true\">\n  <!-- dodaj tabindex=\"-1\" do elementów fokusowalnych -->\n  <button tabindex=\"-1\">Przykładowy przycisk</button>\n</li>\n```",
  "shell-root_aria-hidden": "Problem w podanym fragmencie kodu polega na tym, że atrybut `aria-hidden` jest ustawiony na \"true\" na elemencie, który jest fokusowalny lub zawiera elementy fokusowalne. Może to powodować problemy dla użytkowników czytników ekranu, ponieważ nie będą oni w stanie uzyskać dostępu do fokusowalnych elementów wewnątrz `shell-root`.\n\nAby rozwiązać ten problem, należy upewnić się, że wszystkie elementy fokusowalne wewnątrz `shell-root` mają atrybut `tabindex` ustawiony na \"-1\", aby usunąć je z kolejności fokusowania.\n\nOto poprawiona wersja fragmentu kodu:\n\n```html\n<shell-root aria-hidden=\"true\">\n  <!-- Upewnij się, że wszystkie elementy wewnątrz shell-root mają tabindex=\"-1\" -->\n  <button tabindex=\"-1\">Fokusowalny przycisk</button>\n  <a href=\"#\" tabindex=\"-1\">Fokusowalny link</a>\n  <!-- Inna niefokusowalna zawartość -->\n</shell-root>\n```\n\nW tej poprawionej wersji, elementy fokusowalne (przycisk i link) wewnątrz `shell-root` mają swój `tabindex` ustawiony na \"-1\", co usuwa je z kolejności fokusowania i zapewnia, że nie są dostępne, gdy atrybut `aria-hidden` jest ustawiony na  \"true\"."
}

