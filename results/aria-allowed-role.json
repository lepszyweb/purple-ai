{
  "button_role=\"presentation\"": "Problem w podanym fragmencie kodu polega na tym, że element button ma nieodpowiednią wartość atrybutu roli \"presentation\". Rola \"presentation\" służy do usuwania semantycznego znaczenia elementu, co nie jest odpowiednie dla przycisku. Prawidłowa wersja fragmentu kodu nie powinna zawierać atrybutu role dla elementu button.\n\nPrawidłowa wersja:\n\n<button type=\"button\"><i></i></button>",
  "form_role=\"form\"": "Problem w podanym fragmencie kodu polega na tym, że atrybut role ma niewłaściwą wartość. Element `form` ma już domyślną rolę \"form\", więc nie ma potrzeby dodawania atrybutu role z tą samą wartością. Aby to naprawić, wystarczy usunąć atrybut role z elementu `form`.\n\nPoprawiony fragment kodu:\n\n```\n<form>\n```",
  "input_role=\"button\"": "Problem w podanym fragmencie kodu polega na tym, że atrybut `role` ma nieodpowiednią wartość. Element jest `input` z `type` \"checkbox\", ale `role` jest ustawiony na \"button\". Prawidłową rolą dla pola wyboru powinno być \"checkbox\".\n\nOto poprawiona wersja fragmentu kodu:\n\n```html\n<input aria-expanded=\"false\" aria-label=\"...\" role=\"checkbox\" type=\"checkbox\">\n```",
  "a_role=\"tooltip\"": "Problem w podanym fragmencie kodu polega na tym, że atrybut `role` ma niewłaściwą wartość \"tooltip\" dla elementu anchor (`<a>`). Prawidłową rolą dla elementu anchor jest \"link\".\n\nOto poprawiona wersja fragmentu kodu:\n\n```html\n<a aria-describedby=\"tooltip-overview-5\" href=\"...\" role=\"link\"><i></i></a>\n```",
  "button_role=\"heading\"": "Problem w tym fragmencie kodu polega na tym, że atrybut `role` ma niewłaściwą wartość  \"heading\" dla elementu button. Prawidłową wartością powinien być \"button\".\n\nOto poprawiony fragment kodu:\n\n```html\n<button aria-expanded=\"true\" role=\"button\" type=\"button\">\n```",
  "iframe_role=\"region\"": "Problem w podanym fragmencie kodu polega na tym, że atrybut `role` jest ustawiony na \"region\" dla elementu `iframe`. Rola \"region\" nie jest odpowiednia dla elementu `iframe`. Zamiast tego, powinieneś użyć roli \"document\" lub \"application\" dla elementu `iframe` w zależności od jego zawartości.\n\nOto poprawiona wersja fragmentu kodu:\n\n```\n<iframe aria-label=\"...\" name=\"...\" role=\"document\" style=\"border: 0px; vertical-align: bottom;\" tabindex=\"0\" title=\"...\"></iframe>\n```\n\nW tej poprawionej wersji atrybut `role` jest ustawiony na \"document\". Jeśli zawartość `iframe` bardziej przypomina aplikację, można zamiast tego użyć `role=\"application\"`.",
  "section_role=\"tablist\"": "Problem w podanym fragmencie kodu polega na tym, że atrybut `role` ma nieodpowiednią wartość \"tablist\" dla elementu `section`. Element `section` nie powinien mieć roli \"tablist\", ponieważ nie jest to poprawne semantycznie. Rola \"tablist\" powinna być używana z elementem `div` lub podobnym elementem kontenera, który zawiera grupę kart (zakładek).\n\nOto poprawiona wersja fragmentu kodu:\n\n```\n<div role=\"tablist\">\n  <section>\n    <!-- Tu Twoja treść -->\n  </section>\n</div>\n```\n\nW tej poprawionej wersji zawinęliśmy element `section` wewnątrz elementu `div` i przypisaliśmy rolę \"tablist\" do elementu `div`. Teraz element `section` może być użyty do reprezentowania panelu kart, podczas gdy element `div` z rolą \"tablist\" będzie działał jako kontener dla grupy kart.",
  "textarea_role=\"combobox\"": "Problem w tym fragmencie kodu polega na tym, że atrybut `role` jest ustawiony na \"combobox\" na elemencie `textarea`. Rola combobox powinna być powiązana z elementem input, a nie z elementem textarea. Ponadto atrybut `type` nie jest prawidłowy dla elementu textarea.\n\nOto poprawiona wersja fragmentu kodu:\n\n```html\n<div role=\"combobox\" aria-haspopup=\"both\" aria-owns=\"Alh6id\" aria-expanded=\"false\">\n  <input\n    aria-activedescendant=\"\"\n    aria-autocomplete=\"both\"\n    aria-controls=\"Alh6id\"\n    aria-label=\"...\"\n    name=\"...\"\n    title=\"...\"\n    type=\"search\"\n    value=\"...\"\n  />\n  <textarea aria-label=\"...\" name=\"...\" title=\"...\"></textarea>\n</div>\n```\n\nW tej poprawionej wersji zawinęliśmy elementy input i textarea wewnątrz elementu div z rolą \"combobox\". Element input ma teraz odpowiednie atrybuty, a element textarea nie ma już nieprawidłowych atrybutów.",
  "label_role=\"radio\"": "Problem we fragmencie kodu polega na tym, że atrybut `role` jest ustawiony na \"radio\" dla elementu `label`, co jest niewłaściwe. Atrybut `role` powinien być ustawiony na rzeczywistym elemencie wejściowym.\n\nOto poprawna wersja fragmentu kodu:\n\n```html\n<label for=\"radioInput\" aria-label=\"...\" title=\"...\">\n  <input\n    type=\"radio\"\n    id=\"radioInput\"\n    name=\"...\"\n    aria-checked=\"false\"\n    aria-required=\"true\"\n    tabindex=\"0\"\n    role=\"radio\"\n  >\n</label>\n```\n\nPrzenieśliśmy atrybuty `role`, `aria-checked`, `aria-required`, `name` i `tabindex` do właściwego elementu `input` i dodaliśmy atrybut `for` do elementu `label`, aby powiązać go z wejściem. ",
  "section_role=\"list\"": "Problem we fragmencie kodu polega na tym, że atrybut `role` ma niewłaściwą wartość \"list\" dla elementu `section`. Poprawna wersja fragmentu kodu powinna używać odpowiedniego elementu dla roli \"list\", takiego jak nieuporządkowana lista `<ul>` lub uporządkowana lista `<ol>`.\n\nPoprawiony fragment kodu:\n\n```html\n<ul role=\"list\">\n  <!-- Tu elementy listy -->\n</ul>\n```\n\nLub, jeśli chcesz użyć listy uporządkowanej:\n\n```html\n<ol role=\"list\">\n  <!-- Tu elementy listy -->\n</ol>\n```",
  "li_role=\"button\"": "Problem we fragmencie kodu polega na tym, że atrybut `role` jest ustawiony na \"button\" dla elementu listy (`<li>`), co jest niewłaściwe. Elementy listy powinny mieć rolę \"listitem\".\n\nOto poprawiona wersja fragmentu kodu: \n\n```\n<li role=\"listitem\" tabindex=\"0\">\n```",
  "input_role=\"link\"": "Problem w podanym fragmencie kodu polega na tym, że element `input` z `type=\"submit\"` ma niewłaściwą wartość dla atrybutu `role`. Atrybut `role` jest ustawiony na \"link\", co jest nieprawidłowe dla przycisku submit. Prawidłową wartością atrybutu `role` dla przycisku submit powinien być \"button\".\n\nOto poprawna wersja fragmentu kodu: \n\n```html\n<input name=\"...\" onclick=\"if(document.getElementById('loginForm').checkValidity()){this.onclick = function () { return false; }};\" role=\"button\" type=\"submit\" value=\"...\">\n```",
  "a_role=\"navigation\"": "TProblem w podanym fragmencie kodu polega na tym, że atrybut `role` ma niewłaściwą wartość \"navigation\" dla elementu `<a>`. Prawidłową wartością powinno być \"link\".\n\nOto poprawiona wersja fragmentu kodu:\n\n```\n<a aria-label=\"...\" href=\"...\" role=\"link\" tabindex=\"-1\">\n```",
  "img_role=\"button\"": "Problem w podanym fragmencie kodu polega na tym, że element `img` ma niewłaściwą wartość dla atrybutu `role`. Atrybut `role` powinien zostać usunięty z elementu `img`, a zamiast tego element `button` powinien zostać użyty do zawinięcia `img`.\n\nOto poprawna wersja fragmentu kodu:\n\n```html\n<button style=\"background: none; border: none; padding: 0; cursor: pointer;\" tabindex=\"0\">\n  <img alt=\"\" src=\"...\" style=\"margin-left: -12px; margin-top: -41px; width: 25px; height: 41px; transform: translate3d(538px, 200px, 0px); z-index: 200;\">\n</button>\n```\n\nW tej poprawionej wersji, element `button` jest używany do zawijania elementu `img`, a atrybut `role` jest usuwany z `img`. Atrybut `tabindex` został przeniesiony do elementu `button`, a do elementu `button` została dodana dodatkowa stylizacja, aby usunąć jego domyślny wygląd. ",
  "li_role=\"tabpanel\"": "Problem w podanym fragmencie kodu polega na tym, że atrybut role ma niewłaściwą wartość. Rola \"tabpanel\" powinna być użyta z elementem `div` zamiast `li`.\n\nOto poprawna wersja fragmentu kodu:\n\n```html\n<div aria-label=\"...\" aria-roledescription=\"slide\" role=\"tabpanel\" style=\"width: calc(100%);\">\n  <ul>\n    <li>...</li>\n  </ul>\n</div>\n```\n\nW tej poprawionej wersji zawinęliśmy elementy `li` wewnątrz elementu `ul` i umieściliśmy je wewnątrz elementu `div` z odpowiednią wartością atrybutu roli \"tabpanel\".",
  "li_role=\"alert\"": "Problem w tym fragmencie kodu polega na tym, że atrybut `role` ma nieodpowiednią wartość \"alert\" dla elementu `li`. Rola \"alert\" jest przeznaczona dla elementów, które przekazują użytkownikowi ważne informacje, zazwyczaj są to regiony na żywo. Bardziej odpowiednią rolą dla elementu `li` byłaby \"listitem\" lub brak roli, jeśli jest on dzieckiem kontenera listy (np. `ul` lub `ol`).\n\nOto poprawna wersja fragmentu kodu:\n\n```html\n<li aria-atomic=\"true\"><span></span></li>\n```\n\nW tej poprawionej wersji usunęliśmy atrybut `role`, ponieważ nie jest on potrzebny dla elementu `li`, gdy jest on dzieckiem kontenera listy. Jeśli nadrzędny kontener listy ma rolę \"list\", elementy `li` będą automatycznie rozpoznawane jako elementy listy przez czytniki ekranu."
}